#!/bin/sh

if [ $# -lt 1 ]; then
    echo 'Please provide a parameter in the following format:'
    echo 'epubcheckforbrokenlines PATH_TO_EPUB_TO_UPDATE'
    return;
fi

TRUE=0
FALSE=1

validat_path_and_extension() {
    if [ ! -f "$1" ]; then
        echo "$1 is not a valid path please try again with a valid path to a $2 file."
        return $FALSE;
    fi

    ext="${1##*.}"
    if [[ ! $ext == "$3" ]]; then
        echo "$1 does not end in '$3' and thus is not usable as a $2 file for this script."
        return $FALSE;
    fi

    return $TRUE;
}

# validate the file paths and extensions before proceeding with text replacement
if ! validat_path_and_extension $1 'epub' 'epub'; then
  return
fi

echo 'starting epub broken line check...'

rm -rf ./epub #delete the folder if it already exists

unzip -qq "${1}" -d epub

# build list of files to check for suggestions in
files=''
for j in ./epub/**/*.{html,xhtml,htm}; do
    if [[ -f "${j}" ]]; then
        if [[ $files == "" ]]; then
            files="${j}"
        else
            files="${files},${j}"
        fi
    fi
done

# build list of css files to potentially add css values to
cssFiles=''
for j in ./epub/**/*.css; do
    if [[ -f "${j}" ]]; then
        if [[ $cssFiles == "" ]]; then
            cssFiles="${j}"
        else
            cssFiles="${cssFiles},${j}"
        fi
    fi
done

# TODO: update the logic to do -a only when only 1 param passed in to this script
epub-lint fixable -f "$files" -c "$cssFiles" -a 

# rezip the epub
cd epub
zip -q -0 -X "../compress.epub" mimetype
zip -q -rDX9 "../compress.epub" * -x mimetype
cd ..

#remove our work directory
rm -rf ./epub

mv "${1}" "${1}.original"
mv compress.epub "${1}"

echo 'completed epub broken line check...'