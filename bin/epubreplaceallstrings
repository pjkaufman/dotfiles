#!/bin/sh

if [ $# -lt 2 ]; then
    echo 'Please provide 2 parameters in the following format:'
    echo 'epubreplaceallstrings PATH_TO_MARDKOWN_FILE_OF_REPLACEMENTS PATH_TO_EPUB_TO_UPDATE'
    echo 'The the markdown file should have a table of strings in one column and their replacement in the next.'
    echo 'For example:'
    echo '| Text to replace | Text to replace with |'
    echo '| --------------- | -------------------- |'
    echo '| I am typo | I am a typo |'
    return;
fi

source "$HOME/dotfiles/bin/validatepathandextension"

# validate the file paths and extensions before proceeding with text replacement
if ! validate_path_and_extension $1 'markdown' 'md'; then
  return
fi

if ! validate_path_and_extension $2 'epub' 'epub'; then
  return
fi

echo 'starting epub string replacement...'

rm -rf ./epub #delete the folder if it already exists

unzip -qq "${2}" -d epub

# build list of files to check for string replacements in
files=''
for j in ./epub/**/*.{html,xhtml,htm}; do
    if [[ -f "${j}" ]]; then
        if [[ $files == "" ]]; then
            files="${j}"
        else
            files="${files},${j}"
        fi
    fi
done

epub-lint replace-strings -f "$files" -e "${1}"

# rezip the epub
cd epub
zip -q -0 -X "../compress.epub" mimetype
zip -q -rDX9 "../compress.epub" * -x mimetype
cd ..

#remove our work directory
rm -rf ./epub

mv "${2}" "${2}.original"
mv compress.epub "${2}"

echo 'completed epub string replacement...'